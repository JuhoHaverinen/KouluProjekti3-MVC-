@model IEnumerable<FFMP.Data.Inspection>
@inject IHttpContextAccessor _contxt;
@using FFMP.Data

@{
    ViewData["Title"] = "Index";
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_Navbar");
    }
    }

<h1>List of inspections</h1>
<hr />
<br />
                

@*<p>
    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="@("#createInspection")" data-bs-url="@Url.Action($"Create")">Create Inspection</button>
    @await Html.PartialAsync("_CreatePartialView", new Inspection())
</p>*@
    @using (Html.BeginForm())
    {
        <p>
            Find by Creator: @Html.TextBox("searchByCreator")
            <input type="submit" value="Search" />
        </p>
    }
<table class="table">
    <thead>
        <tr>
            <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["TimestampSortParam"]">
                @Html.Raw("Created")
            </a>
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Timestamp)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Reason)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Observations)
            </th>
            <th>
                @Html.DisplayName("State")
            </th>
            <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["ObjectSortParam"]">
                @Html.DisplayNameFor(model => model.Object)
            </a>
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Object)
            </th>*@
            <th>
                @Html.DisplayName("Creator")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Timestamp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reason)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Observations)
            </td>
                <td>
                    @if (item.ChangeOfState == true)
                    {
                        @Html.Raw("In order")
                    }
                    else if (item.ChangeOfState == false)
                    {
                        @Html.Raw("Out of order")
                    }
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Object.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserLoginNavigation.Name)
            </td>
            <td>
                @*<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |*@
                    <button type="button" class="btn btn-info" id="change" data-bs-toggle="modal" data-bs-target="@("#editInsp-"+item.Id)" data-bs-url="@Url.Action($"Edit/{item.Id}")">Edit</button>
                    @await Html.PartialAsync("_EditPartialView", item)
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="@("#deleteInsp-"+item.Id)" data-bs-url="@Url.Action($"Delete/{item.Id}")">Delete</button>
                    @await Html.PartialAsync("_DeletePartialView", item)
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="@("#detailsInsp-"+item.Id)" data-bs-url="@Url.Action($"Details/{item.Id}")">Details</button>
                    @await Html.PartialAsync("_DetailsPartialView", item)
                @*<a asp-action="Details" asp-route-id="@item.Id">Details</a>*@
                @*<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
                    <br />
                <a asp-action="ObjectsInspections" asp-route-id=@item.ObjectId>Show only inspections of this object</a>
            </td>
        </tr>
}
    </tbody>
</table>
